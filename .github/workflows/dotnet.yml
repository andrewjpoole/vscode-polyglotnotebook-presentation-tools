# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-Test-Publish-Packages:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - name: Restore dependencies
      run: dotnet restore vscode-polyglotnotebook-presentation-tools.sln

    - name: Build
      run: dotnet build vscode-polyglotnotebook-presentation-tools.sln --no-restore

    - name: Test
      run: dotnet test vscode-polyglotnotebook-presentation-tools.sln --no-build --logger trx --results-directory "TestResults" --verbosity normal

    - name: Upload dotnet test results
      uses: actions/upload-artifact@v4
      with:
        name: dotnet-results
        path: TestResults
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
    
    - name: Publish NuGet Packages
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      run: dotnet nuget push **/bin/*/*.nupkg --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json  --skip-duplicate
